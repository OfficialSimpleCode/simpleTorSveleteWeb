var h=Object.defineProperty;var c=(n,i,t)=>i in n?h(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var e=(n,i,t)=>(c(n,typeof i!="symbol"?i+"":i,t),t);import{V as u,A as r,a as g}from"./User.NQS7hArb.js";const a=class a{constructor(){e(this,"signInUserId","");e(this,"currentAuthProvider",null);e(this,"verificationID","");e(this,"submitedPhone","");e(this,"lastVerificationUnix",0);e(this,"currentCredential",null);e(this,"phoneVerificationWithFirebase",!0);e(this,"canUseAuthVars",!1);e(this,"verificationRepo",new u)}static GI(){return this._singleton}updateFinishLogIn(i){}async logoutIfSignUpNotCompleted(){}get userLoggedIn(){return this.verificationRepo.isLoggedIn}async getUserClaims(){return await this.verificationRepo.userClaims}async saveUserName(i){return await this.verificationRepo.updateUserName({name:i})}setupLoggin(){this.verificationID="",this.currentAuthProvider=null,this.currentCredential=null,this.submitedPhone="",this.phoneVerificationWithFirebase=!0}startUserAuthListener(i){this.verificationRepo.onAuthUserStateChanged(async()=>{this.canUseAuthVars=!0,await i()})}get userId(){return this.verificationRepo.userId}get userData(){return this.verificationRepo.userData}get existsLoginProviders(){return this.verificationRepo.existsProviders}get lastLoginDate(){return this.verificationRepo.lastLoginDate}async unlinkProvider(i){const t=g[i]||"";return await this.verificationRepo.unlinkProvider({providerId:t})}async logout(){return await this.verificationRepo.logout()}async handleLogin({provider:i,loginType:t}){switch(i){case r.Apple:return await this._signInWithApple(t);case r.Google:return await this._signInWithGoogle(t);case r.Facebook:return await this._signInWithFacebook(t);case r.Phone:return!1}}async _signInWithGoogle(i){return await this.verificationRepo.signInWithGoogle(i)}async _signInWithApple(i){return await this.verificationRepo.signInWithApple(i)}async _signInWithFacebook(i){return await this.verificationRepo.signInWithFacebook(i)}async _loginWithOtp({loginType:i,otp:t,autocredential:s}){return await this.verificationRepo.signInWithOtp({loginType:i,verificationId:this.verificationID,otp:t,autocredential:s})}async deleteUser(){return await this.verificationRepo.deleteUser()}async reloadUser(){await this.verificationRepo.reloadUser()}};e(a,"_singleton",new a);let o=a;export{o as V};
