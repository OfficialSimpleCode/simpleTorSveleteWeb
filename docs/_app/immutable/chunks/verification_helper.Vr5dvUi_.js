var h=Object.defineProperty;var c=(r,i,e)=>i in r?h(r,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[i]=e;var t=(r,i,e)=>(c(r,typeof i!="symbol"?i+"":i,e),e);import{V as u,A as n,e as g}from"./business_initializer._TLAtbho.js";const a=class a{constructor(){t(this,"signInUserId","");t(this,"currentAuthProvider");t(this,"verificationID","");t(this,"submitedPhone","");t(this,"lastVerificationUnix",0);t(this,"currentCredential");t(this,"phoneVerificationWithFirebase",!0);t(this,"canUseAuthVars",!1);t(this,"verificationRepo",new u)}static GI(){return this._singleton}updateFinishLogIn(i){}async logoutIfSignUpNotCompleted(){}get userLoggedIn(){return this.verificationRepo.isLoggedIn}async getUserClaims(){return await this.verificationRepo.userClaims}async saveUserName(i){return await this.verificationRepo.updateUserName({name:i})}setupLoggin(){this.verificationID="",this.currentAuthProvider=void 0,this.currentCredential=void 0,this.submitedPhone="",this.phoneVerificationWithFirebase=!0}startUserAuthListener(i){this.verificationRepo.onAuthUserStateChanged(async()=>{this.canUseAuthVars=!0,await i()})}get userId(){return this.verificationRepo.userId}get userData(){return this.verificationRepo.userData}get existsLoginProviders(){return this.verificationRepo.existsProviders}get lastLoginDate(){return this.verificationRepo.lastLoginDate}async unlinkProvider(i){const e=g[i]||"";return await this.verificationRepo.unlinkProvider({providerId:e})}async logout(){return await this.verificationRepo.logout()}async handleLogin({provider:i,loginType:e}){switch(i){case n.Apple:return await this._signInWithApple(e);case n.Google:return await this._signInWithGoogle(e);case n.Facebook:return await this._signInWithFacebook(e);case n.Phone:return!1}}async _signInWithGoogle(i){return await this.verificationRepo.signInWithGoogle(i)}async _signInWithApple(i){return await this.verificationRepo.signInWithApple(i)}async _signInWithFacebook(i){return await this.verificationRepo.signInWithFacebook(i)}async _loginWithOtp({loginType:i,otp:e,autocredential:s}){return await this.verificationRepo.signInWithOtp({loginType:i,verificationId:this.verificationID,otp:e,autocredential:s})}async deleteUser(){return await this.verificationRepo.deleteUser()}async reloadUser(){await this.verificationRepo.reloadUser()}};t(a,"_singleton",new a);let o=a;export{o as V};
