var m=Object.defineProperty;var w=(o,e,s)=>e in o?m(o,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[e]=s;var i=(o,e,s)=>(w(o,typeof e!="symbol"?e+"":e,s),s);import{G as I,d as R,u as D,a as $,c as v,U as C,e as S,B as d,T,f as b,h as u,g as G,i as p,j as h,r as M,p as y}from"./business_initializer.RqQi4dFb.js";const{v4:A}=y,n=class n{constructor(){i(this,"generalRepo",new I)}static GI(){return n._singleton}async getDevelopersFcms(){let e=new Set;const s=[];return R.forEach(t=>{s.push(this.generalRepo.getDocRepo({path:`${D}/${t}/${$}`,docId:v}).then(a=>{if(a!==void 0&&a.exists()&&a.data()!=null){const c=C.fromJson(a.data());e=new Set([...e,...c.fcmsTokens])}}))}),await Promise.all(s),e}async changeSearchStatusOfBusiness(e,s){return await this.generalRepo.updateFieldInsideDocAsMapRepo({path:S,docId:e,fieldName:"show",value:s}).then(t=>(t&&e===d.GI().business.businessId&&(d.GI().business.searchable=s),t))}async logErrorToDb({userId:e,errorType:s,exceptions:t,extras:a,errorCode:c,strIssue:l}){const r={date:T.now().toDate().toUTCString(),error:t.toString(),currentBusinessId:b.currentBusinesssId,...a};l&&(r.strIssue=l),r.device="web";const f={[e]:{[A()]:r}};await this.generalRepo.setAsMapWithMergeRepo({path:`${u}/${G}/${p[s]}`,docId:h(new Date),insideEnviroments:!1,valueAsJson:f}).then(B=>{})}async loginProblemReport(e,s){return await this.generalRepo.setAsMapWithMergeRepo({path:`${u}/${M}/${p[s]}`,docId:h(new Date),insideEnviroments:!1,valueAsJson:{[e.id]:e.toJson()}}).then(t=>t)}};i(n,"_singleton",new n);let g=n;export{g as D};
